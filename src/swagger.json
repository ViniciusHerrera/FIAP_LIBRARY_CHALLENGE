{
  "openapi": "3.0.0",
  "info": {
    "title": "API Book Management",
    "description": "This API is responsible to manage books and publishers of a library system",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "API Support",
      "url": "http://www.example.com/support",
      "email": "support@example.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4000/v1",
      "description": "Sandbox - API",
      "schemes": [
        "http"
      ]
    }
  ],
  "paths": {
    "/publishers": {
      "post": {
        "summary": "Publisher registration",
        "description": "This route is responsible to register a publisher",
        "tags": [
          "Publishers"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Publisher"
              },
              "examples": {
                "publisher": {
                  "value": {
                    "name": "Publisher BlaBla"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Publisher"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all publishers",
        "description": "This route is responsible to get all publishers",
        "tags": [
          "Publishers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Publisher"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/publishers/{id}": {
      "get": {
        "summary": "Get a publisher by ID",
        "description": "This route is responsible to get a publisher by ID",
        "tags": [
          "Publishers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id of the publisher"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Publisher"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Change a publisher by ID",
        "description": "This route is responsible to change the publisher data",
        "tags": [
          "Publishers"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Publisher"
              },
              "examples": {
                "publisher": {
                  "value": {
                    "name": "Publisher Changed"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id of the publisher"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Publisher"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Delete publisher by ID",
        "description": "This route is responsible to delete a publisher by ID",
        "tags": [
          "Publishers"
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/books": {
      "post": {
        "summary": "Book registration",
        "description": "This route is responsible to register a book",
        "tags": [
          "Books"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              },
              "examples": {
                "book": {
                  "value": {
                    "title": "My Book of Life",
                    "author": "John Doe",
                    "isbn": "999-9-99-999999-9",
                    "yearOfPublication": 1995,
                    "publisher": "1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all Books",
        "description": "This route is responsible to get all books",
        "tags": [
          "Books"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/books/{id}": {
      "get": {
        "summary": "Get a book by ID",
        "description": "This route is responsible to get a book by ID",
        "tags": [
          "Books"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id of the book"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Change a book by ID",
        "description": "This route is responsible to change the book data",
        "tags": [
          "Books"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              },
              "examples": {
                "book": {
                  "value": {
                    "title": "My Book of Life",
                    "author": "John Doe",
                    "isbn": "999-9-99-999999-9",
                    "yearOfPublication": 1995,
                    "publisher": "1"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id of the book"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "summary": "Delete book by ID",
        "description": "This route is responsible to delete a book by ID",
        "tags": [
          "Books"
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Method not allowed"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Publisher": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "Book": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "isbn": {
            "type": "string"
          },
          "yearOfPublication": {
            "type": "integer"
          },
          "publishers": {
            "type": "integer"
          }
        },
        "required": [
          "title",
          "author",
          "isbn",
          "yearOfPublication",
          "publishers"
        ]
      }
    }
  }
}